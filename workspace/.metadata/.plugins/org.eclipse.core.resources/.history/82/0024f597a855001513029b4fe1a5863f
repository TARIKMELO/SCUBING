package presentation.layout;
import gov.nasa.worldwind.Model;
import gov.nasa.worldwind.WorldWind;
import gov.nasa.worldwind.avlist.AVKey;
import gov.nasa.worldwind.awt.WorldWindowGLCanvas;
import gov.nasa.worldwind.event.SelectEvent;
import gov.nasa.worldwind.layers.WorldMapLayer;
import gov.nasa.worldwind.util.StatusBar;
import gov.nasa.worldwindx.examples.ClickAndGoSelectListener;
import gov.nasa.worldwindx.examples.util.HighlightController;
import gov.nasa.worldwindx.examples.util.ToolTipController;

import java.awt.BorderLayout;
import java.awt.Dimension;

import javax.swing.JPanel;

public class AppPanel extends JPanel
{
	protected WorldWindowGLCanvas wwd;
	protected StatusBar statusBar;
	protected ToolTipController toolTipController;
	protected HighlightController highlightController;

	public AppPanel(Dimension canvasSize, boolean includeStatusBar)
	{


		super(new BorderLayout());

		this.wwd = this.createWorldWindow();
		this.wwd.setPreferredSize(canvasSize);

		// Create the default model as described in the current worldwind properties.
		Model m = (Model) WorldWind.createConfigurationComponent(AVKey.MODEL_CLASS_NAME);
		this.wwd.setModel(m);


		// Setup a select listener for the worldmap click-and-go feature
		this.wwd.addSelectListener(new ClickAndGoSelectListener(this.getWwd(), WorldMapLayer.class));

		//            this.wwd.addSelectListener(new SimpleFeatureLayerSelectionMask(null));



		//this.add(this.wwd, BorderLayout.CENTER);
		if (includeStatusBar)
		{
			this.statusBar = new StatusBar();
			this.add(statusBar, BorderLayout.PAGE_END);
			this.statusBar.setEventSource(wwd);
		}

		// Add controllers to manage highlighting and tool tips.
		this.toolTipController = new ToolTipController(this.getWwd(), AVKey.DISPLAY_NAME, null);
		this.highlightController = new HighlightController(this.getWwd(), SelectEvent.ROLLOVER);
	}

	protected WorldWindowGLCanvas createWorldWindow()
	{
		return new WorldWindowGLCanvas();
	}

	public WorldWindowGLCanvas getWwd()
	{
		return wwd;
	}


	public StatusBar getStatusBar()
	{
		return statusBar;
	}




}